{"ast":null,"code":"var _jsxFileName = \"D:\\\\gabriel_grezzana\\\\amz_polly\\\\src\\\\component\\\\polly.tsx\",\n  _s = $RefreshSig$();\n// src/TextToSpeech.tsx\nimport React, { useState } from \"react\";\nimport { polly } from \"../../aws-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeech = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [audioUrl, setAudioUrl] = useState(\"\");\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  const handleGenerateVoice = async () => {\n    const params = {\n      Text: text,\n      OutputFormat: \"mp3\",\n      VoiceId: \"Joanna\" // escolha a voz que você deseja usar\n    };\n    try {\n      const data = await polly.synthesizeSpeech(params).promise();\n      if (data.AudioStream) {\n        const audioBlob = new Blob([data.AudioStream], {\n          type: \"audio/mp3\"\n        });\n        const url = URL.createObjectURL(audioBlob);\n        setAudioUrl(url);\n      }\n    } catch (error) {\n      console.error(\"Erro ao gerar voz:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text to Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: handleTextChange,\n      rows: 4,\n      cols: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateVoice,\n      children: \"Gerar Voz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ou\\xE7a a Voz:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"hEQ+ZUu8NJQpgzHGu7UelqqS2V4=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","polly","jsxDEV","_jsxDEV","TextToSpeech","_s","text","setText","audioUrl","setAudioUrl","handleTextChange","event","target","value","handleGenerateVoice","params","Text","OutputFormat","VoiceId","data","synthesizeSpeech","promise","AudioStream","audioBlob","Blob","type","url","URL","createObjectURL","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","cols","onClick","controls","src","_c","$RefreshReg$"],"sources":["D:/gabriel_grezzana/amz_polly/src/component/polly.tsx"],"sourcesContent":["// src/TextToSpeech.tsx\r\nimport React, { useState } from \"react\";\r\nimport { polly } from \"../../aws-config\";\r\n\r\nconst TextToSpeech: React.FC = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [audioUrl, setAudioUrl] = useState(\"\");\r\n\r\n  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleGenerateVoice = async () => {\r\n    const params = {\r\n      Text: text,\r\n      OutputFormat: \"mp3\",\r\n      VoiceId: \"Joanna\", // escolha a voz que você deseja usar\r\n    };\r\n\r\n    try {\r\n      const data = await polly.synthesizeSpeech(params).promise();\r\n      if (data.AudioStream) {\r\n        const audioBlob = new Blob([data.AudioStream], { type: \"audio/mp3\" });\r\n        const url = URL.createObjectURL(audioBlob);\r\n        setAudioUrl(url);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao gerar voz:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Text to Speech</h1>\r\n      <textarea value={text} onChange={handleTextChange} rows={4} cols={50} />\r\n      <br />\r\n      <button onClick={handleGenerateVoice}>Gerar Voz</button>\r\n      {audioUrl && (\r\n        <div>\r\n          <h2>Ouça a Voz:</h2>\r\n          <audio controls src={audioUrl} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextToSpeech;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,KAA6C,IAAK;IAC1EJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAEV,IAAI;MACVW,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,QAAQ,CAAE;IACrB,CAAC;IAED,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,gBAAgB,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,CAAC;MAC3D,IAAIF,IAAI,CAACG,WAAW,EAAE;QACpB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACL,IAAI,CAACG,WAAW,CAAC,EAAE;UAAEG,IAAI,EAAE;QAAY,CAAC,CAAC;QACrE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,SAAS,CAAC;QAC1Cd,WAAW,CAACiB,GAAG,CAAC;MAClB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAUU,KAAK,EAAEP,IAAK;MAAC8B,QAAQ,EAAE1B,gBAAiB;MAAC2B,IAAI,EAAE,CAAE;MAACC,IAAI,EAAE;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEhC,OAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhC,OAAA;MAAQoC,OAAO,EAAEzB,mBAAoB;MAAAiB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvD3B,QAAQ,iBACPL,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBhC,OAAA;QAAOqC,QAAQ;QAACC,GAAG,EAAEjC;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAzCID,YAAsB;AAAAsC,EAAA,GAAtBtC,YAAsB;AA2C5B,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}